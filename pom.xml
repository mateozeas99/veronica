<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.rolandopalermo.facturacion.ec</groupId>
	<artifactId>veronica</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.9.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<env>dev</env>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<filter.src>${basedir}</filter.src>
		<java.version>1.8</java.version>
		<skipTests>true</skipTests>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<maven.compiler.debug>false</maven.compiler.debug>
		<maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>
		<maven-plugin-antrun.version>1.8</maven-plugin-antrun.version>
		<maven-plugin-ant.version>2.4</maven-plugin-ant.version>

		<version.docker.maven.plugin>0.30.0</version.docker.maven.plugin>

		<docker.image.prefix>rolandopalermo</docker.image.prefix>

		<veronica.name>veronica</veronica.name>
		<veronica.db.user>postgres</veronica.db.user>
		<veronica.db.password>123456</veronica.db.password>
		<veronica.db.port>5432</veronica.db.port>
		<veronica.db.container>veronica-db</veronica.db.container>
		<veronica.db.key>8qxBjzCdQkwdpu</veronica.db.key>
		<veronica.db.health>http://localhost:8080/veronica/publico/health</veronica.db.health>
	</properties>
	<modules>
		<module>veronica-model</module>
		<module>veronica-common</module>
		<module>veronica-app</module>
		<module>veronica-soap</module>
		<module>veronica-dto</module>
		<module>veronica-service</module>
		<module>veronica-ride</module>
		<module>veronica-mapper</module>
		<module>veronica-persistence</module>
	</modules>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--Security-->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
	</dependencies>
	<profiles>
		<profile>
			<id>development</id>
			<properties>
				<env>dev</env>
			</properties>
		</profile>
		<profile>
			<id>production</id>
			<properties>
				<env>prd</env>
			</properties>
		</profile>
		<profile>
			<id>docker</id>
			<properties>
				<env>docker</env>
			</properties>
		</profile>
	</profiles>
	<build>
		<filters>
			<filter>${filter.src}/src/filters/filter-${env}.properties</filter>
		</filters>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${version.docker.maven.plugin}</version>
				<configuration>
					<dockerHost>unix:///var/run/docker.sock</dockerHost>
					<verbose>true</verbose>
					<images>
						<image>
							<name>${docker.image.prefix}/${veronica.name}</name>
							<alias>${veronica.name}</alias>
							<build>
								<dockerFileDir>${project.basedir}/target/dockerfile/</dockerFileDir>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
								<tags>
									<tag>latest</tag>
									<tag>${project.version}</tag>
								</tags>
							</build>
							<run>
								<ports>
									<port>8080:8080</port>
								</ports>
								<links>
									<link>${veronica.db.container}:${veronica.db.container}</link>
								</links>
								<env>
									<SPRING_DATASOURCE_USERNAME>${veronica.db.user}</SPRING_DATASOURCE_USERNAME>
									<SPRING_DATASOURCE_PASSWORD>${veronica.db.password}</SPRING_DATASOURCE_PASSWORD>
								</env>
								<dependsOn>
									<container>${veronica.db.container}</container>
								</dependsOn>
								<wait>
									<http>
										<url>${veronica.db.health}</url>
										<method>GET</method>
										<status>200..399</status>
									</http>
									<time>200000</time>
								</wait>
							</run>
						</image>
						<image>
							<name>${docker.image.prefix}/${veronica.db.container}</name>
							<alias>${veronica.db.container}</alias>
							<build>
								<from>postgres:11.3</from>
								<assembly>
									<name>DB</name>
									<inline>
										<files>
											<file>
												<source>${project.basedir}/src/main/postgres/veronica.sql</source>
												<fileMode>777</fileMode>
											</file>
										</files>
									</inline>
									<targetDir>/tmp</targetDir>
									<mode>dir</mode>
								</assembly>
							</build>
							<run>
								<ports>
									<port>${veronica.db.port}:${veronica.db.port}</port>
								</ports>
								<env>
									<POSTGRES_USER>${veronica.db.user}</POSTGRES_USER>
									<POSTGRES_PASSWORD>${veronica.db.password}</POSTGRES_PASSWORD>
									<POSTGRES_DB>${veronica.name}</POSTGRES_DB>
								</env>
								<cmd>postgres -c encrypt.key=${veronica.db.key}</cmd>
								<wait>
									<exec>
										<postStart>psql -U ${veronica.db.user} -d ${veronica.name} -1 -f /tmp/veronica.sql</postStart>
									</exec>
									<time>20000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>